version: "3"

# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-01-25T19-56-04Z
  command: server --console-address ":9001" http://minio{1...4}/data{1...2}
  expose:
    - "9000"
    - "9001"
  # environment:
  #   MINIO_ROOT_USER: minio
  #   MINIO_ROOT_PASSWORD: minio123
  env_file:
    - docker.env
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

services:
  api:
    container_name: api
    image: nestjs-api-dev:1.0.0
    build:
      context: .
      # target: development
      dockerfile: ./Dockerfile
    command: npm run start:dev
    ports:
      - 3000:3000
      # - 9229:9229
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    networks:
      - db
      - cache
      # - elk_elasticsearch
    depends_on:
      - db
      - cache

  db:
    container_name: db
    image: postgres
    # environment:
    #   POSTGRES_USER: videos
    #   POSTGRES_PASSWORD: videos-dev-33
    #   POSTGRES_DB: videos
    env_file:
      - docker.env
    volumes:
      - ./db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  pgadmin:
    container_name: db-admin
    image: dpage/pgadmin4
    # environment:
    #   PGADMIN_DEFAULT_EMAIL: admin@troo.video
    #   PGADMIN_DEFAULT_PASSWORD: videos-admin-123
    env_file:
      - docker.env
    logging:
      driver: "none"
    depends_on:
      - db
    ports:
      - "5050:80"
    networks:
      - db
    restart: unless-stopped

  cache:
    container_name: cache
    image: redis:6.2-alpine
    restart: unless-stopped
    ports:
      - '6379:6379'
    # command: redis-server --save 60 1 --loglevel warning --requirepass MDNcVb924aeYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
      - ./cache:/data
    networks:
      - cache

  redis-commander:
    container_name: cache-admin
    image: rediscommander/redis-commander:latest
    # environment:
    #   - REDIS_HOSTS=local:cache:6379
    env_file:
      - docker.env
    ports:
      - "8081:8081"
    depends_on:
      - cache
    networks:
      - cache

# minio1:
#   <<: *minio-common
#   container_name: videos-data-1-dev
#   hostname: minio1
#   volumes:
#     - data1-1:/data1
#     - data1-2:/data2
#   networks:
#     - data

# minio2:
#   <<: *minio-common
#   container_name: videos-data-2-dev
#   hostname: minio2
#   volumes:
#     - data2-1:/data1
#     - data2-2:/data2
#   networks:
#     - data

# minio3:
#   <<: *minio-common
#   container_name: videos-data-3-dev
#   hostname: minio3
#   volumes:
#     - data3-1:/data1
#     - data3-2:/data2
#   networks:
#     - data

# minio4:
#   <<: *minio-common
#   container_name: videos-data-4-dev
#   hostname: minio4
#   volumes:
#     - data4-1:/data1
#     - data4-2:/data2
#   networks:
#     - data

# minio:
#   container_name: videos-minio-dev
#   image: nginx:1.19.2-alpine
#   hostname: nginx
#   volumes:
#     - ./minio.nginx.conf:/etc/nginx/nginx.conf:ro
#   ports:
#     - "9000:9000"
#     - "9001:9001"
#   depends_on:
#     - minio1
#     - minio2
#     - minio3
#     - minio4
#   networks:
#     - data

networks:
  db:
    driver: bridge
  cache:
    driver: bridge
  # proxynet:
  #   name: multinet
  # elk_elasticsearch:
  #   external: true
  # data:
  #   driver: bridge

# volumes:
#   elasticsearch-data:
#     driver: local
#   data1-1:
#   data1-2:
#   data2-1:
#   data2-2:
#   data3-1:
#   data3-2:
#   data4-1:
#   data4-2:
